name: News Commentary Bot (Gemini 2.5 Pro)

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  comment-news:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # –ü–æ–ª—É—á–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
        clean: true     # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    
    - name: Force refresh Facts.txt
      run: |
        echo "=== –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Facts.txt ==="
        echo "–¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç: $(git rev-parse HEAD)"
        echo "–§–∞–π–ª—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:"
        ls -la *.txt || echo "–ù–µ—Ç .txt —Ñ–∞–π–ª–æ–≤"
        
        if [ -f "Facts.txt" ]; then
          echo "‚úÖ Facts.txt –Ω–∞–π–¥–µ–Ω"
          echo "–†–∞–∑–º–µ—Ä: $(wc -c < Facts.txt) –±–∞–π—Ç"
          echo "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: $(stat -c %y Facts.txt)"
          echo "–ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:"
          head -c 200 Facts.txt
          echo -e "\n---"
          echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:"
          tail -c 200 Facts.txt
        else
          echo "‚ùå Facts.txt –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–º –∫–æ–º–º–∏—Ç–µ"
          echo "–í—Å–µ —Ñ–∞–π–ª—ã:"
          find . -name "*.txt" -type f
        fi
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª
        git checkout HEAD -- Facts.txt 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å Facts.txt"
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        echo "=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ==="
        pip install google-generativeai requests beautifulsoup4 lxml
        
    - name: Run news commentary
      id: run_bot
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        echo "=== –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ ==="
        
        # –ï—â–µ —Ä–∞–∑ –ø—Ä–æ–≤–µ—Ä—è–µ–º Facts.txt –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        if [ -f "Facts.txt" ]; then
          echo "üìä –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Facts.txt:"
          echo "–†–∞–∑–º–µ—Ä: $(wc -c < Facts.txt) –±–∞–π—Ç"
          echo "MD5: $(md5sum Facts.txt)"
        fi
        
        python news_bot.py
        
        echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ==="
        if [ -d "commentary" ] && [ "$(ls -A commentary 2>/dev/null)" ]; then
          echo "success=true" >> $GITHUB_OUTPUT
          echo "‚úÖ –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –≤ commentary/"
          ls -la commentary/
        else
          echo "success=false" >> $GITHUB_OUTPUT
          echo "‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ commentary/"
        fi
      
    - name: Commit and push results
      if: steps.run_bot.outputs.success == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add commentary/
        
        if ! git diff --staged --quiet; then
          git commit -m "–ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π $(date '+%d.%m.%Y %H:%M')"
          git push origin main
          echo "‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã"
        else
          echo "‚ÑπÔ∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
