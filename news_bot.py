import google.generativeai as genai
import requests
from bs4 import BeautifulSoup
import os
from datetime import datetime
import time
import traceback
import sys

def ensure_directory_exists(directory):
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"""
    try:
        if not os.path.exists(directory):
            os.makedirs(directory, exist_ok=True)
            print(f"‚úÖ –ü–∞–ø–∫–∞ {directory} —Å–æ–∑–¥–∞–Ω–∞")
        else:
            print(f"‚úÖ –ü–∞–ø–∫–∞ {directory} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
        test_file = os.path.join(directory, 'test_write.tmp')
        with open(test_file, 'w') as f:
            f.write('test')
        os.remove(test_file)
        print(f"‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ {directory} –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏ {directory}: {e}")
        return False

def load_facts():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –±–∞–∑—É —Ñ–∞–∫—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞ –ë–ï–ó –æ–±—Ä–µ–∑–∞–Ω–∏—è"""
    try:
        print("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª Facts.txt...")
        if not os.path.exists('Facts.txt'):
            print("‚ö†Ô∏è –§–∞–π–ª Facts.txt –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –≤–µ—Ä—Å–∏—é...")
            default_facts = """
–≠—Ç–æ –±–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π:

–≠–ö–û–ù–û–ú–ò–ö–ê:
- –†–æ—Å—Å–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –Ω–µ—Ñ—Ç—å, –≥–∞–∑, –∑–µ—Ä–Ω–æ
- –†—É–±–ª—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ü–µ–Ω –Ω–∞ —ç–Ω–µ—Ä–≥–æ—Ä–µ—Å—É—Ä—Å—ã  
- –°–∞–Ω–∫—Ü–∏–∏ –≤–ª–∏—è—é—Ç –Ω–∞ —Ç–æ—Ä–≥–æ–≤–ª—é –∏ —Ñ–∏–Ω–∞–Ω—Å—ã

–ü–û–õ–ò–¢–ò–ö–ê:
- –§–µ–¥–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å 85 —Å—É–±—ä–µ–∫—Ç–∞–º–∏
- –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∞—è —Ä–µ—Å–ø—É–±–ª–∏–∫–∞
- –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –î—É–º–∞ –∏ –°–æ–≤–µ—Ç –§–µ–¥–µ—Ä–∞—Ü–∏–∏

–û–ë–©–ï–°–¢–í–û:
- –ù–∞—Å–µ–ª–µ–Ω–∏–µ –æ–∫–æ–ª–æ 146 –º–ª–Ω —á–µ–ª–æ–≤–µ–∫
- –ú–Ω–æ–≥–æ–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞
- –†–∞–∑–≤–∏—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

–ú–ï–ñ–î–£–ù–ê–†–û–î–ù–´–ï –û–¢–ù–û–®–ï–ù–ò–Ø:
- –ß–ª–µ–Ω –û–û–ù, –ë–†–ò–ö–°, –®–û–°, –ï–ê–≠–°
- –û—Ç–Ω–æ—à–µ–Ω–∏—è —Å –ö–∏—Ç–∞–µ–º, –ò–Ω–¥–∏–µ–π, —Å—Ç—Ä–∞–Ω–∞–º–∏ –ê—Ñ—Ä–∏–∫–∏
- –°–ª–æ–∂–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –ó–∞–ø–∞–¥–æ–º
            """
            with open('Facts.txt', 'w', encoding='utf-8') as f:
                f.write(default_facts.strip())
            print("‚úÖ –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π —Ñ–∞–π–ª Facts.txt")
            return default_facts.strip()
            
        with open('Facts.txt', 'r', encoding='utf-8') as f:
            facts = f.read()
        
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –±–∞–∑–∞ —Ñ–∞–∫—Ç–æ–≤ –ü–û–õ–ù–û–°–¢–¨–Æ ({len(facts)} —Å–∏–º–≤–æ–ª–æ–≤)")
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {len(facts)/1024/1024:.2f} –ú–ë")
        return facts
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å Facts.txt: {e}")
        return "–ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π."

def get_available_models():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Gemini"""
    try:
        print("üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ Gemini...")
        models = genai.list_models()
        available_models = []
        
        for model in models:
            if 'generateContent' in model.supported_generation_methods:
                available_models.append(model.name)
                print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞—è –º–æ–¥–µ–ª—å: {model.name}")
        
        return available_models
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π: {e}")
        return []

def get_news():
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Å–∞–π—Ç–æ–≤"""
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π...")
